plugins {
    id 'net.ivoa.vo-dml.vodmltools' version '0.5.6'
    id 'java-library'
    id 'checkstyle'
    id "com.github.eerohele.saxon-gradle" version "0.2.1"
    id 'maven-publish'
}


vodml {
    bindingFiles.setFrom(file("src/main/vo-dml/CAOM-2.5.vodml-binding.xml"))
    outputDocDir.set(layout.projectDirectory.dir("doc/std/vodml-generated"))
    outputSiteDir.set(layout.projectDirectory.dir("doc/site/generated")) // N.B the last part of this path must be "generated"

}
group = 'org.opencadc'

version = '2.5.0-SNAPSHOT'

jar {
    enabled = true
}


defaultTasks 'build', 'xslt'

tasks.register("quarkusJar", Jar)
        {
            archiveClassifier = 'quarkus'
            from sourceSets.main.output
            exclude("META-INF/persistence.xml")
        }

task initHTML(type: Copy) {
    
    project.mkdir('build/html')
        
    from 'src/main/resources'
    into 'build/html'
    include '**/*.png'
    include '**-profile.html'
}

xslt {
    dependsOn initHTML
    
    stylesheet file('src/main/xsl/vo-dml2html.xsl')
    input file('src/main/resources/CAOM-' + project.version + '-vodml.xml')
    output file('build/html/index.html')
    
    parameters(
        project_name: 'Common Archive Observation Model',
        preamble: '../resources/preamble.html', // relative to stylesheet apparently
        abstract: '../resources/abstract.html',
        status: '../resources/status.html',
        acknowledgment: '../resources/acknowledgment.html',
        graphviz_png: 'CAOM-' + project.version + '.png'
    )
    
}

dependencies {
    implementation 'org.javastro.ivoa.vo-dml:ivoa-base:1.0-SNAPSHOT'
    testImplementation 'org.opencadc:cadc-vodml:[1.0.9,1.1)'

    testImplementation 'junit:junit:4.13'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact  tasks.quarkusJar
                    pom {
                        name = 'Common Archive Observation Model'
                        description = 'a general purpose data model for use as the core data model of an astronomical data centre'

                    }
        }
    }
}


apply from: 'opencadc.gradle'

// site tasks
tasks.register("copyJavaDocForSite", Copy) {
    from(layout.buildDirectory.dir("docs/javadoc"))
    into(vodml.outputSiteDir.dir("javadoc"))
    dependsOn(tasks.javadoc)

}

tasks.register("makeSiteNav",Exec)
{
    commandLine("yq","eval",  "(.nav | .. | select(has(\"AutoGenerated Documentation\"))|.[\"AutoGenerated Documentation\"]) += (load(\"doc/site/generated/allnav.yml\")|sort_by(keys|.[0]))", "mkdocs_template.yml")
    standardOutput=  new FileOutputStream("mkdocs.yml")
    dependsOn("vodmlSite")
    dependsOn("copyJavaDocForSite")

}
tasks.register("testSite", Exec){
    commandLine("mkdocs", "serve")
    dependsOn("makeSiteNav")
}
tasks.register("doSite", Exec){
    commandLine("mkdocs", "gh-deploy", "--force")
    dependsOn("makeSiteNav")
}
